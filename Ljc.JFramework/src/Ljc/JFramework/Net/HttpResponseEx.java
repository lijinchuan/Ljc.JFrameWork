package Ljc.JFramework.Net;

public class HttpResponseEx {
	private boolean _cacheControl = false;

	// Summary:
	// The Cache-Control header, which specifies caching directives that must be
	// obeyed by all caching mechanisms along the request/response chain.
	public boolean getCacheControl() {
		return this._cacheControl;
	}

	public void setCacheControl(boolean value) {
		this._cacheControl = value;
	}

	public String Connection;
	//
	// Summary:
	// The Date header, which specifies the date and time at which the response
	// originated.
	public String Date;
	//
	// Summary:
	// The Keep-Alive header, which specifies a parameter to be used to maintain
	// a persistent connection.
	public String KeepAlive;
	//
	// Summary:
	// The Pragma header, which specifies implementation-specific directives that
	// might apply to any agent along the request/response chain.
	public String Pragma;
	//
	// Summary:
	// The Trailer header, which specifies that the indicated header fields are
	// present in the trailer of a message that is encoded with chunked
	// transfer-coding.
	public String Trailer;
	//
	// Summary:
	// The Transfer-Encoding header, which specifies what (if any) type of
	// transformation
	// has been applied to the message body.
	public String TransferEncoding;
	//
	// Summary:
	// The Upgrade header, which specifies additional communications protocols that
	// the client supports.
	public String Upgrade;
	//
	// Summary:
	// The Via header, which specifies intermediate protocols to be used by gateway
	// and proxy agents.
	public String Via;
	//
	// Summary:
	// The Warning header, which specifies additional information about that status
	// or transformation of a message that might not be reflected in the message.
	public String Warning;
	//
	// Summary:
	// The Allow header, which specifies the set of HTTP methods that are supported.
	public String Allow;
	//
	// Summary:
	// The Content-Length header, which specifies the length, in bytes, of the
	// accompanying
	// body data.
	public String ContentLength;
	//
	// Summary:
	// The Content-Type header, which specifies the MIME type of the accompanying
	// body data.
	public String ContentType;
	//
	// Summary:
	// The Content-Encoding header, which specifies the encodings that have been
	// applied to the accompanying body data.
	public String ContentEncoding;
	//
	// Summary:
	// The Content-Langauge header, which specifies the natural language or
	// languages
	// of the accompanying body data.
	public String ContentLanguage;
	//
	// Summary:
	// The Content-Location header, which specifies a URI from which the
	// accompanying
	// body can be obtained.
	public String ContentLocation;
	//
	// Summary:
	// The Content-MD5 header, which specifies the MD5 digest of the accompanying
	// body data, for the purpose of providing an end-to-end message integrity
	// check.
	public String ContentMd5;
	//
	// Summary:
	// The Range header, which specifies the subrange or subranges of the response
	// that the client requests be returned in lieu of the entire response.
	public String ContentRange;
	//
	// Summary:
	// The Expires header, which specifies the date and time after which the
	// accompanying
	// body data should be considered stale.
	public String Expires;
	//
	// Summary:
	// The Last-Modified header, which specifies the date and time at which the
	// accompanying body data was last modified.
	public String LastModified;
	//
	// Summary:
	// The Accept-Ranges header, which specifies the range that is accepted by the
	// server.
	public String AcceptRanges;
	//
	// Summary:
	// The Age header, which specifies the time, in seconds, since the response
	// was generated by the originating server.
	public String Age;
	//
	// Summary:
	// The Etag header, which specifies the current value for the requested variant.
	public String ETag;
	//
	// Summary:
	// The Location header, which specifies a URI to which the client is redirected
	// to obtain the requested resource.
	public String Location;
	//
	// Summary:
	// The Proxy-Authenticate header, which specifies that the client must
	// authenticate
	// itself to a proxy.
	public String ProxyAuthenticate;
	//
	// Summary:
	// The Retry-After header, which specifies a time (in seconds), or a date and
	// time, after which the client can retry its request.
	public String RetryAfter;
	//
	// Summary:
	// The Server header, which specifies information about the originating server
	// agent.
	public String Server;
	//
	// Summary:
	// The Set-Cookie header, which specifies cookie data that is presented to the
	// client.
	public String SetCookie;
	//
	// Summary:
	// The Vary header, which specifies the request headers that are used to
	// determine
	// whether a cached response is fresh.
	public String Vary;
	//
	// Summary:
	// The WWW-Authenticate header, which specifies that the client must
	// authenticate
	// itself to the server.
	public String WwwAuthenticate;

	private byte[] _responseBytes;

	public byte[] getResponseBytes() {
		return this._responseBytes;
	}

	public void setResponseBytes(byte[] value) {
		this._responseBytes = value;
	}

	private String _characterSet;

	public String getCharacterSet() {
		return this._characterSet;
	}

	public void setCharacterSet(String value) {
		this._characterSet = value;
	}

	private String _responseContent;

	/// <summary>
	/// 请求返回内容
	/// </summary>
	public String getResponseContent() {

		return _responseContent;

	}

	public void setResponseContent(String value) {

		_responseContent = value;

	}

	private static String GetHeaderValue(WebHeaderCollection header, String name) {
		if (header == null)
			return "";
		return header.get(name);

	}

	private boolean _successed = false;

	public boolean getSuccessed() {
		return _successed;
	}

	public void setSuccessed(boolean value) {
		_successed = value;
		if (value) {
			_errorMsg = null;
		}
	}

	private Exception _errorMsg = new Exception();

	/// <summary>
	/// 错误信息
	/// </summary>
	public Exception getErrorMsg() {
		return _errorMsg;
	}

	void setErrorMsg(Exception value) {
		_errorMsg = value;
	}

	private String _responseUrl;

	public String getResponseUrl() {
		return this._responseUrl;
	}

	public void setResponseUrl(String value) {
		this._responseUrl = value;
	}

	private int _statusCode;

	public int getStatusCode() {
		return this._statusCode;
	}

	public void setStatusCode(int value) {
		this._statusCode = value;
	}

	private String _statusDescription;

	public String getStatusDescription() {
		return this._statusDescription;
	}

	private long _requestMills;

	public long getRequestMills() {
		return this._requestMills;
	}

	// public HttpResponseEx PraseHeader(HttpWebResponse httpWebResponse) {
	// // 打开和URL之间的连接
	// URLConnection connection = realUrl.openConnection();
	// if (httpWebResponse != null) {
	// this.AcceptRanges = httpWebResponse.Headers.Get("AcceptRanges");
	// this.Age = httpWebResponse.Headers.Get("Age");
	// this.Allow = httpWebResponse.Headers.Get("Allow");
	// this.Connection = httpWebResponse.Headers.Get("Connection");
	// this.ContentEncoding = httpWebResponse.Headers.Get("Content-Encoding");
	// this.ContentLanguage = httpWebResponse.Headers.Get("Content-Language");
	// this.ContentLength = httpWebResponse.Headers.Get("Content-Length");
	// this.ContentLocation = httpWebResponse.Headers.Get("Content-Location");
	// this.ContentMd5 = httpWebResponse.Headers.Get("ContentMd5");
	// this.ContentRange = httpWebResponse.Headers.Get("Content-Range");
	// this.ContentType = httpWebResponse.Headers.Get("Content-Type");
	// this.Date = httpWebResponse.Headers.Get("Date");
	// this.ETag = httpWebResponse.Headers.Get("ETag");
	// this.Expires = httpWebResponse.Headers.Get("Expires");
	// this.KeepAlive = httpWebResponse.Headers.Get("KeepAlive");
	// this.LastModified = httpWebResponse.Headers.Get("LastModified");
	// this.Location = httpWebResponse.Headers.Get("Location");
	// this.Pragma = httpWebResponse.Headers.Get("Pragma");
	// this.ProxyAuthenticate = httpWebResponse.Headers.Get("ProxyAuthenticate");
	// this.RetryAfter = httpWebResponse.Headers.Get("RetryAfter");
	// this.Server = httpWebResponse.Headers.Get("Server");
	// this.SetCookie = httpWebResponse.Headers.Get("Set-Cookie");
	// this.Trailer = httpWebResponse.Headers.Get("Trailer");
	// this.TransferEncoding = httpWebResponse.Headers.Get("Transfer-Encoding");
	// this.Upgrade = httpWebResponse.Headers.Get("Upgrade");
	// this.Vary = httpWebResponse.Headers.Get("Vary");
	// this.Via = httpWebResponse.Headers.Get("Via");
	// this.Warning = httpWebResponse.Headers.Get("Warning");
	// this.WwwAuthenticate = httpWebResponse.Headers.Get("WwwAuthenticate");
	// this.StatusCode = (int) httpWebResponse.StatusCode;
	// this.StatusDescription = httpWebResponse.StatusDescription;
	//
	// this.ResponseUrl = httpWebResponse.ResponseUri.AbsoluteUri;
	// }
	// return this;
	// }
}
